#
# elastos.org nginx config file
#

user  daemon daemon;

worker_processes  4;

error_log  "/opt/rubystack/nginx/logs/error.log";
pid        "/opt/rubystack/nginx/logs/nginx.pid";
#Specifies the value for maximum file descriptors that can be opened by this process.
#worker_rlimit_nofile 51200;

events {
    use epoll;
    worker_connections  1024;
}


http {
    include       "/opt/rubystack/nginx/conf/mime.types";
    default_type  application/octet-stream;

    client_body_temp_path  "/opt/rubystack/nginx/tmp/client_body" 1 2;
    proxy_temp_path "/opt/rubystack/nginx/tmp/proxy" 1 2;
    fastcgi_temp_path "/opt/rubystack/nginx/tmp/fastcgi" 1 2;

    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status  $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  "/opt/rubystack/nginx/logs/access.log";

    # no sendfile on OSX
    tcp_nopush     on;
    tcp_nodelay       off;

    server_names_hash_bucket_size 256;
    client_header_buffer_size 256k;
    large_client_header_buffers 4 256k;

    #size limits
    client_max_body_size      16m;
    client_body_buffer_size   256k;
    client_header_timeout     3m;
    client_body_timeout 3m;
    send_timeout             3m;

    #for error 502 499
    sendfile on;
    keepalive_timeout 120;
    
    passenger_root "/opt/rubystack/ruby/lib/ruby/gems/1.9.1/gems/passenger-4.0.25";
    passenger_ruby "/opt/rubystack/ruby/bin/ruby";
    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;


  server {
    # port to listen on. Can also be set to an IP:PORT
    listen 80;

    location /status {
      stub_status on;
      access_log   off;
      allow 127.0.0.1;
      deny all;
    }
    # PageSpeed
    pagespeed on;
    pagespeed FileCachePath /opt/rubystack/nginx/var/ngx_pagespeed_cache;
    #  Ensure requests for pagespeed optimized resources go to the pagespeed
    #  handler and no extraneous headers get set.
    location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" { add_header "" ""; }
    location ~ "^/ngx_pagespeed_static/" { }
    location ~ "^/ngx_pagespeed_beacon$" { }
    location /ngx_pagespeed_statistics { allow 127.0.0.1; deny all; }
    location /ngx_pagespeed_message { allow 127.0.0.1; deny all; }
  }

  include "/opt/rubystack/nginx/conf/vhosts/*.conf";

}
